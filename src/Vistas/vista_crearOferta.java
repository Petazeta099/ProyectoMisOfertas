/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Conexion.Database;
import Clases.Oferta;
import java.awt.Color;
import java.awt.Image;
import java.awt.List;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import java.math.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.ListSelectionModel;
import javax.swing.border.MatteBorder;

/**
 *
 * @author vina
 */
public class vista_crearOferta extends javax.swing.JFrame {

    static home home = new home();
    static login_Admin l_Admin = new login_Admin();
    String rut = login_Encargado.rut_encargado;
    ArrayList<Oferta> ofertas = new ArrayList<Oferta>();
    Database cn;
    Connection reg;
    
    //
    Connection conexion;
    Statement st;
    Database bd = new Database("");
    String ruta, nombre;
    int contador = 0;
    boolean fechaPrimera = false;
    boolean fechaSegunda = false;
    int clic_tabla = 0;

    /**
     * Creates new form agregarOferta
     */
    public vista_crearOferta() {
        initComponents();
        jTextField1.hide();
        txtSKU.hide();
        jLabel1.setBorder(new MatteBorder(1, 1, 1, 1, Color.BLACK));
        mostrarProductos();
        cn = new Database();
        reg = cn.getConnection();
        setExtendedState(JFrame.MAXIMIZED_HORIZ);

        setResizable(false);

        tblProductos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    }

    public void mostrarProductos() {
        DefaultTableModel modelo = new DefaultTableModel();
        ResultSet rs = Database.crearConsulta("SELECT p.sku,p.nombre,p.descripcion,c.tipo,m.nombre FROM producto p INNER JOIN categoria c ON p.categoria_id = c.id INNER JOIN marca m ON p.marca_id = m.id");
        modelo.setColumnIdentifiers(new Object[]{"SKU", "NOMBRE", "DESCRIPCION", "CATEGORIA", "MARCA"});
        try {
            while (rs.next()) {
                modelo.addRow(new Object[]{rs.getString("sku"), rs.getString("nombre"), rs.getString("descripcion"), rs.getString("tipo"), rs.getString(5)});
            }
            tblProductos.setModel(modelo);

        } catch (Exception e) {
            System.out.println("Error: " + e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTexto1 = new javax.swing.JLabel();
        txtDatos = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JLabel();
        txtDescrip = new javax.swing.JLabel();
        txtInicioO = new javax.swing.JLabel();
        txtTerminoO = new javax.swing.JLabel();
        txtPrecioNormal = new javax.swing.JLabel();
        txtPrecioOferta = new javax.swing.JLabel();
        txtComMin = new javax.swing.JLabel();
        txtComMax = new javax.swing.JLabel();
        tfTitulo = new javax.swing.JTextField();
        tfDescrip = new javax.swing.JTextField();
        tfPrecioNor = new javax.swing.JTextField();
        tfPrecioOfer = new javax.swing.JTextField();
        tdCantiMin = new javax.swing.JTextField();
        tfCantMax = new javax.swing.JTextField();
        btnCrearOferta = new javax.swing.JButton();
        dcOp1 = new com.toedter.calendar.JDateChooser();
        dcOp2 = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        btn_salir = new javax.swing.JButton();
        btn_ofertas = new javax.swing.JButton();
        btnCargarImg = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        txtSKU = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CREAR OFERTA");

        txtTexto1.setText("Lista de productos");

        txtDatos.setText("Ingrese datos de la oferta:");

        txtTitulo.setText("Titulo:");

        txtDescrip.setText("Descripci√≥n:");

        txtInicioO.setText("Fecha inicio de la oferta:");

        txtTerminoO.setText("Fecha termino de la oferta:");

        txtPrecioNormal.setText("Precio normal de la oferta");

        txtPrecioOferta.setText("Descuento %");

        txtComMin.setText("Compra minima por producto");

        txtComMax.setText("Compra maxima por producto");

        tfTitulo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfTituloFocusLost(evt);
            }
        });
        tfTitulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfTituloKeyTyped(evt);
            }
        });

        tfDescrip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfDescripKeyTyped(evt);
            }
        });

        tfPrecioNor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPrecioNorKeyTyped(evt);
            }
        });

        tfPrecioOfer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPrecioOferKeyTyped(evt);
            }
        });

        tdCantiMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tdCantiMinKeyTyped(evt);
            }
        });

        tfCantMax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfCantMaxKeyTyped(evt);
            }
        });

        btnCrearOferta.setText("Crear oferta");
        btnCrearOferta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearOfertaActionPerformed(evt);
            }
        });

        dcOp1.setDateFormatString("yyyy-MM-dd");
        dcOp1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dcOp1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                dcOp1FocusLost(evt);
            }
        });
        dcOp1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dcOp1MouseClicked(evt);
            }
        });
        dcOp1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dcOp1KeyTyped(evt);
            }
        });

        dcOp2.setDateFormatString("yyyy-MM-dd");
        dcOp2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dcOp2FocusLost(evt);
            }
        });

        tblProductos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int columnIndex){
                return false;
            }
        };
        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "sku", "nombre", "descripcion", "categoria_id", "marca_id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProductos.getTableHeader().setReorderingAllowed(false);
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblProductos);

        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        btn_ofertas.setText("Ver Ofertas");
        btn_ofertas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ofertasActionPerformed(evt);
            }
        });

        btnCargarImg.setText("Cargar foto");
        btnCargarImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarImgActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTexto1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDescrip)
                                            .addComponent(txtInicioO)
                                            .addComponent(txtTerminoO))
                                        .addGap(39, 39, 39)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfDescrip)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(dcOp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(tdCantiMin, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                    .addComponent(tfPrecioOfer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                                                                    .addComponent(tfPrecioNor, javax.swing.GroupLayout.Alignment.LEADING))
                                                                .addComponent(tfCantMax, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGap(22, 22, 22)
                                                        .addComponent(btnCargarImg)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(dcOp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 10, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(tfTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(txtSKU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(30, 30, 30))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtComMin)
                                            .addComponent(txtComMax)
                                            .addComponent(txtTitulo)
                                            .addComponent(txtPrecioNormal)
                                            .addComponent(txtPrecioOferta)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(104, 104, 104)
                                                .addComponent(txtDatos)))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnCrearOferta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_ofertas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_salir)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTexto1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtDatos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTitulo)
                    .addComponent(tfTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSKU, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescrip)
                    .addComponent(tfDescrip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtInicioO)
                    .addComponent(dcOp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCargarImg)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTerminoO)
                            .addComponent(dcOp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrecioNormal)
                            .addComponent(tfPrecioNor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrecioOferta)
                            .addComponent(tfPrecioOfer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtComMin)
                            .addComponent(tdCantiMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtComMax)
                            .addComponent(tfCantMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearOferta)
                    .addComponent(btn_salir)
                    .addComponent(btn_ofertas))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearOfertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearOfertaActionPerformed

        /*
        int errores=0;
        if(tfTitulo.getText().equals("") || tfDescrip.getText().equals("") || dcOp1.equals("") || dcOp2.equals("")
                || tfPrecioNor.getText().equals("") || tfPrecioOfer.getText().equals("") || tdCantiMin.getText().equals("") || tfCantMax.getText().equals("")){
            errores = errores+1;
        }
        
        if(errores>=1){
            JOptionPane.showMessageDialog(null, "Ingrese informacion faltante en el formulario", "Aviso", JOptionPane.ERROR_MESSAGE);
        }else{
        
        }
         */
        int ultimoId = 0;
         int ultimoId2 =0; 
        ArrayList<Integer> idsOfertas = new ArrayList<Integer>();
        String fechaI = "";
        String fechaT = "";
        Date dateI = null;
        Date dateT = null;
        Date today = new Date();
        today.setHours(0);
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String titulo = tfTitulo.getText();
        String descrip = tfDescrip.getText();

        //-----------------------------------------
        FileInputStream fis = null;

//---------------------------------------------------
        int itemSeleccionado = tblProductos.getSelectedColumn();
        if (itemSeleccionado <= 0) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un producto.", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else if (tfTitulo.getText().equals("") || tfDescrip.getText().equals("") || dcOp1.equals("") || dcOp2.equals("")
                || tfPrecioNor.getText().equals("") || tfPrecioOfer.getText().equals("") || tdCantiMin.getText().equals("") || tfCantMax.getText().equals("") || jTextField1.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Ingrese informacion en el formulario.", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else if (dcOp2.getDate().before(dcOp1.getDate())) {
            JOptionPane.showMessageDialog(this, "Ingrese fecha valida, la fecha no puede ser anterior a la primera seleccionada.", "ERROR", JOptionPane.ERROR_MESSAGE);
            dcOp1.setDate(null);
            dcOp2.setDate(null);
        } else if (dcOp1.getDate().before(today) || dcOp2.getDate().before(today)) {
            JOptionPane.showMessageDialog(this, "La fechas de inicio y termino de oferta no pueden ser anteriores al dia de hoy> "+dateFormat.format(today), "ERROR", JOptionPane.ERROR_MESSAGE);
            dcOp1.setDate(null);
            dcOp2.setDate(null);
        } else {

            try {
                //-------------------------------
                ruta = jTextField1.getText();
                File file = new File(ruta);
                fis = new FileInputStream(file);

                //-------------------------------
                
                dateI = dcOp1.getDate();
                dateT = dcOp2.getDate();

                fechaI = dateI.toString();
                fechaT = dateT.toString();
                String precioNormal = tfPrecioNor.getText();
                String precioOferta = tfPrecioOfer.getText();
                float descuento = (Float.parseFloat(precioOferta) / 100);  //obtiene el % de descuento de la caja de texto
                float pNormal = (float) Float.parseFloat(precioNormal);
                int pOferta = (int) (pNormal - (pNormal * (descuento))); // 1000 - (1000 * (20/100)) = 1000 - 800
                String cantMin = tdCantiMin.getText();
                String cantMax = tfCantMax.getText();
                String rut_encargado = login_Encargado.rut_encargado;

                String rutsinDigito = rut_encargado.substring(0, rut_encargado.length() - 1);
                String rutDigito = rut_encargado.substring(rut_encargado.length() - 1);
                String rutFinal = rutsinDigito + "-" + rutDigito;

                String idProducto = String.valueOf(tblProductos.getValueAt(tblProductos.getSelectedRow(), 0));
                ArrayList<Object> ofertas = new ArrayList<Object>();
                PreparedStatement pst = null;
                PreparedStatement insOferProd = null;
                PreparedStatement coleccionOfertas = null;
                PreparedStatement coleccionOFPROD = null;  //----------------------------
                java.sql.Date sqlFechaInicio = new java.sql.Date(dateI.getTime());
                java.sql.Date sqlFechaTermino = new java.sql.Date(dateT.getTime());
                coleccionOfertas = reg.prepareStatement("SELECT * FROM oferta");
                ResultSet lista = coleccionOfertas.executeQuery();
                while (lista.next()) //recorre
                {
                    if (ultimoId < lista.getInt(1)) {
                        ultimoId = lista.getInt(1);
                    }
                }
                ultimoId = ultimoId + 1;
                System.out.println(ultimoId);
                System.out.println(rutFinal);

                pst = reg.prepareStatement("INSERT INTO oferta VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?)");
                if (ultimoId == 0) {
                    ultimoId = 1;
                }
                pst.setInt(1, ultimoId);
                pst.setString(2, titulo);
                pst.setString(3, descrip);
                pst.setDate(4, sqlFechaInicio);
                pst.setDate(5, sqlFechaTermino);
                pst.setInt(6, Integer.parseInt(precioNormal));
                pst.setInt(7, pOferta);
                pst.setInt(8, Integer.parseInt(cantMin));
                pst.setInt(9, Integer.parseInt(cantMax));
                pst.setInt(10, 0);
                pst.setString(11, rutFinal);
                pst.setBinaryStream(12, fis, (int) file.length());
                pst.setString(13,idProducto);
                pst.executeUpdate();
                System.out.println("Se guardo correctamente");
                JOptionPane.showMessageDialog(this, "Oferta guardada correctamente.");
                tfTitulo.setText("");
                tfDescrip.setText("");
                dcOp1.setDate(null);
                dcOp2.setDate(null);
                tfPrecioNor.setText("");
                tfPrecioOfer.setText("");
                tdCantiMin.setText("");
                tfCantMax.setText("");
                jTextField1.setText("");
                jLabel1.setIcon(null);
                jLabel1.setText("");
                txtSKU.setText("");
                
                    //////////////////////////////
                    /*coleccionOFPROD=reg.prepareStatement("SELECT * FROM oferta_producto");   
                    ResultSet lista2 = coleccionOFPROD.executeQuery();
                    while (lista2.next())  //recorre
                    {
                     ultimoId2=lista2.getInt(3);
                    }
                    ultimoId2=ultimoId2+1;
                    if(ultimoId2==0){
                        ultimoId2=1;
                    } /*
                    
                        /////////////////////////
                        /*
                insOferProd = reg.prepareStatement("INSERT INTO oferta_producto VALUES(?,?,?)");
                insOferProd.setString(1, idProducto);
                insOferProd.setInt(2, ultimoId);
                insOferProd.setInt(3, ultimoId2);
                insOferProd.executeUpdate(); */

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Ingrese fecha valida." + e, "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }


    }//GEN-LAST:event_btnCrearOfertaActionPerformed

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        this.dispose();
        home.setVisible(true);
    }//GEN-LAST:event_btn_salirActionPerformed

    private void btn_ofertasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ofertasActionPerformed
        this.dispose();
        new verOfertas().setVisible(true);
    }//GEN-LAST:event_btn_ofertasActionPerformed

    private void tfTituloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfTituloKeyTyped
        int maximoCaracter = 29;
        char validarCaracter = evt.getKeyChar();
        if (tfTitulo.getText().length() >= maximoCaracter) {
            evt.consume();
        }
    }//GEN-LAST:event_tfTituloKeyTyped

    private void tfDescripKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfDescripKeyTyped
        int maximoCaracter = 99;
        char validarCaracter = evt.getKeyChar();
        if (tfDescrip.getText().length() >= maximoCaracter) {
            evt.consume();
        }
    }//GEN-LAST:event_tfDescripKeyTyped

    private void tfPrecioNorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPrecioNorKeyTyped
        int maximoPuntaje = 7;
        ArrayList<Character> lista = retornarListaCaracteres();
        int errores = 0;
        char validarCaracter = evt.getKeyChar();
        for (int i = 0; i < lista.size(); i++) {
            char caracter = lista.get(i);
            if (validarCaracter == caracter) {
                errores = errores + 1;
            }
        }

        if (Character.isLetter(validarCaracter) || errores > 0 || tfPrecioNor.getText().length() >= maximoPuntaje) {
            evt.consume();
        }
    }//GEN-LAST:event_tfPrecioNorKeyTyped

    private void tfPrecioOferKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPrecioOferKeyTyped
        int maximoPuntaje = 2;
        ArrayList<Character> lista = retornarListaCaracteres();
        int errores = 0;
        char validarCaracter = evt.getKeyChar();
        for (int i = 0; i < lista.size(); i++) {
            char caracter = lista.get(i);
            if (validarCaracter == caracter) {
                errores = errores + 1;
            }
        }

        if (Character.isLetter(validarCaracter) || errores > 0 || tfPrecioOfer.getText().length() >= maximoPuntaje) {
            evt.consume();
        }
    }//GEN-LAST:event_tfPrecioOferKeyTyped

    private void tdCantiMinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tdCantiMinKeyTyped
        int maximoPuntaje = 2;
        ArrayList<Character> lista = retornarListaCaracteres();
        int errores = 0;
        char validarCaracter = evt.getKeyChar();
        for (int i = 0; i < lista.size(); i++) {
            char caracter = lista.get(i);
            if (validarCaracter == caracter) {
                errores = errores + 1;
            }
        }

        if (Character.isLetter(validarCaracter) || errores > 0 || tdCantiMin.getText().length() >= maximoPuntaje) {
            evt.consume();
        }
    }//GEN-LAST:event_tdCantiMinKeyTyped

    private void tfCantMaxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCantMaxKeyTyped
        int maximoPuntaje = 2;
        ArrayList<Character> lista = retornarListaCaracteres();
        int errores = 0;
        char validarCaracter = evt.getKeyChar();
        for (int i = 0; i < lista.size(); i++) {
            char caracter = lista.get(i);
            if (validarCaracter == caracter) {
                errores = errores + 1;
            }
        }

        if (Character.isLetter(validarCaracter) || errores > 0 || tfCantMax.getText().length() >= maximoPuntaje) {
            evt.consume();
        }
    }//GEN-LAST:event_tfCantMaxKeyTyped

    private void btnCargarImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarImgActionPerformed
        final JFileChooser elegirImagen = new JFileChooser();
        elegirImagen.setMultiSelectionEnabled(false);
        int o = elegirImagen.showOpenDialog(this);
        if (o == JFileChooser.APPROVE_OPTION) {
            ruta = elegirImagen.getSelectedFile().getAbsolutePath();
            nombre = elegirImagen.getSelectedFile().getName();
            jTextField1.setText(ruta);
            Image preview = Toolkit.getDefaultToolkit().getImage(ruta);
            if (preview != null) {
                jLabel1.setText("");
                ImageIcon icon = new ImageIcon(preview.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_DEFAULT));
                jLabel1.setIcon(icon);
            }
        }
    }//GEN-LAST:event_btnCargarImgActionPerformed

    private void dcOp1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dcOp1FocusLost

    }//GEN-LAST:event_dcOp1FocusLost

    private void dcOp2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dcOp2FocusLost

    }//GEN-LAST:event_dcOp2FocusLost

    private void tfTituloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfTituloFocusLost

    }//GEN-LAST:event_tfTituloFocusLost

    private void dcOp1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dcOp1KeyTyped

    }//GEN-LAST:event_dcOp1KeyTyped

    private void dcOp1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dcOp1MouseClicked

    }//GEN-LAST:event_dcOp1MouseClicked

    private void dcOp1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dcOp1FocusGained

    }//GEN-LAST:event_dcOp1FocusGained

    private void tblProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMouseClicked
        clic_tabla = this.tblProductos.rowAtPoint(evt.getPoint());
                String sku_producto = "" + tblProductos.getValueAt(clic_tabla, 1);
                txtSKU.setText(sku_producto);
    }//GEN-LAST:event_tblProductosMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarImg;
    private javax.swing.JButton btnCrearOferta;
    private javax.swing.JButton btn_ofertas;
    private javax.swing.JButton btn_salir;
    private com.toedter.calendar.JDateChooser dcOp1;
    private com.toedter.calendar.JDateChooser dcOp2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField tdCantiMin;
    private javax.swing.JTextField tfCantMax;
    private javax.swing.JTextField tfDescrip;
    private javax.swing.JTextField tfPrecioNor;
    private javax.swing.JTextField tfPrecioOfer;
    private javax.swing.JTextField tfTitulo;
    private javax.swing.JLabel txtComMax;
    private javax.swing.JLabel txtComMin;
    private javax.swing.JLabel txtDatos;
    private javax.swing.JLabel txtDescrip;
    private javax.swing.JLabel txtInicioO;
    private javax.swing.JLabel txtPrecioNormal;
    private javax.swing.JLabel txtPrecioOferta;
    private javax.swing.JTextField txtSKU;
    private javax.swing.JLabel txtTerminoO;
    private javax.swing.JLabel txtTexto1;
    private javax.swing.JLabel txtTitulo;
    // End of variables declaration//GEN-END:variables

    private ArrayList<Character> retornarListaCaracteres() {
        ArrayList<Character> validaciones = new ArrayList<Character>();
        validaciones.add('.');
        validaciones.add('/');
        validaciones.add('|');
        validaciones.add('=');
        validaciones.add('?');
        validaciones.add('¬ø');
        validaciones.add('¬¥');
        validaciones.add('¬®');
        validaciones.add('{');
        validaciones.add('}');
        validaciones.add(';');
        validaciones.add(':');
        validaciones.add('_');
        validaciones.add('^');
        validaciones.add('-');
        validaciones.add('!');
        validaciones.add('"');
        validaciones.add('#');
        validaciones.add('$');
        validaciones.add('%');
        validaciones.add('&');
        validaciones.add('(');
        validaciones.add(')');
        validaciones.add('¬°');
        validaciones.add(']');
        validaciones.add('*');
        validaciones.add('[');
        validaciones.add(',');
        validaciones.add('¬∞');

        return validaciones;
    }

}
